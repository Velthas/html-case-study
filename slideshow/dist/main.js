(()=>{"use strict";var n={283:(n,e,t)=>{t.d(e,{Z:()=>s});var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,"#burger-menu {\n    align-self: center;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 30px;\n    display: none;\n}\n\n.burger-div {\n    height: 4px;\n    width: 30px;\n    background-color: whitesmoke;\n}\n\n\n@media screen and (max-width: 800px) {\n\n    #burger-menu {\n        display: flex;\n        transition: transform 0.3s ease-in-out;\n    }\n\n    #burger-menu.active {\n        display: block;\n    }\n\n    .nav-links {\n        display: none;\n        justify-content: flex-start;\n        flex-direction: column;\n        position: absolute;\n        top: 98px;\n    }\n\n    .logo {\n        width: 40%;\n    }\n\n    .parentItem {\n        text-align: center;\n    }\n\n    nav a {\n        align-self: center;\n        padding: 15px 25px;\n    }\n\n    .menuItem {\n        background-color: black;\n        color: white;\n    }\n\n    .nav-links,\n    nav a,\n    .menu-item,\n    .subItem {\n        width: 100vw;\n    }\n\n    .nav-links.visible {\n        display: flex;    \n    }\n\n    .sub-menu {\n        position: static;\n        display: none;\n        text-align: center;\n    }\n\n    .sub-menu.visible {\n        display: block;\n    }\n\n    .active .one {\n        transform: translateY(12px) rotate(45deg);\n    }\n\n    .active .two {\n        transform:  translateY(8px) rotate(-45deg);\n    }\n\n    .active .one,\n    .active .two {\n        transition: transform 0.3s ease-in\n\n    }\n\n    .active .three {\n        display: none;\n    }\n\n}","",{version:3,sources:["webpack://./src/burger.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,sBAAsB;IACtB,6BAA6B;IAC7B,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,WAAW;IACX,4BAA4B;AAChC;;;AAGA;;IAEI;QACI,aAAa;QACb,sCAAsC;IAC1C;;IAEA;QACI,cAAc;IAClB;;IAEA;QACI,aAAa;QACb,2BAA2B;QAC3B,sBAAsB;QACtB,kBAAkB;QAClB,SAAS;IACb;;IAEA;QACI,UAAU;IACd;;IAEA;QACI,kBAAkB;IACtB;;IAEA;QACI,kBAAkB;QAClB,kBAAkB;IACtB;;IAEA;QACI,uBAAuB;QACvB,YAAY;IAChB;;IAEA;;;;QAII,YAAY;IAChB;;IAEA;QACI,aAAa;IACjB;;IAEA;QACI,gBAAgB;QAChB,aAAa;QACb,kBAAkB;IACtB;;IAEA;QACI,cAAc;IAClB;;IAEA;QACI,yCAAyC;IAC7C;;IAEA;QACI,0CAA0C;IAC9C;;IAEA;;QAEI;;IAEJ;;IAEA;QACI,aAAa;IACjB;;AAEJ",sourcesContent:["#burger-menu {\n    align-self: center;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 30px;\n    display: none;\n}\n\n.burger-div {\n    height: 4px;\n    width: 30px;\n    background-color: whitesmoke;\n}\n\n\n@media screen and (max-width: 800px) {\n\n    #burger-menu {\n        display: flex;\n        transition: transform 0.3s ease-in-out;\n    }\n\n    #burger-menu.active {\n        display: block;\n    }\n\n    .nav-links {\n        display: none;\n        justify-content: flex-start;\n        flex-direction: column;\n        position: absolute;\n        top: 98px;\n    }\n\n    .logo {\n        width: 40%;\n    }\n\n    .parentItem {\n        text-align: center;\n    }\n\n    nav a {\n        align-self: center;\n        padding: 15px 25px;\n    }\n\n    .menuItem {\n        background-color: black;\n        color: white;\n    }\n\n    .nav-links,\n    nav a,\n    .menu-item,\n    .subItem {\n        width: 100vw;\n    }\n\n    .nav-links.visible {\n        display: flex;    \n    }\n\n    .sub-menu {\n        position: static;\n        display: none;\n        text-align: center;\n    }\n\n    .sub-menu.visible {\n        display: block;\n    }\n\n    .active .one {\n        transform: translateY(12px) rotate(45deg);\n    }\n\n    .active .two {\n        transform:  translateY(8px) rotate(-45deg);\n    }\n\n    .active .one,\n    .active .two {\n        transition: transform 0.3s ease-in\n\n    }\n\n    .active .three {\n        display: none;\n    }\n\n}"],sourceRoot:""}]);const s=a},797:(n,e,t)=>{t.d(e,{Z:()=>s});var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,"#slideshow {\n    width: 500px;\n    height: 500px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    margin: 50px auto 10px auto;\n}\n\n#slideshow-arrows {\n    display: flex;\n    justify-content: space-between;\n    margin: 0px 12px;\n    width: 90%;\n}\n\n#slideshow-arrows img {\n    width: 24px;\n    height: 24px;\n    background-color: white;\n    padding: 10px;\n    transition: background-color 0.5s ease-in-out;\n}\n\n#slideshow-arrows img:hover {\n    background-color: red;\n}\n\n#dots {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n}\n\n#dots img {\n    width: 18px;\n    height: 18px;\n}\n\n#dots img.active {\n    filter: contrast(0.5);\n}","",{version:3,sources:["webpack://./src/slideshow.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,mBAAmB;IACnB,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,gBAAgB;IAChB,UAAU;AACd;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,uBAAuB;IACvB,aAAa;IACb,6CAA6C;AACjD;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;AACZ;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["#slideshow {\n    width: 500px;\n    height: 500px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    margin: 50px auto 10px auto;\n}\n\n#slideshow-arrows {\n    display: flex;\n    justify-content: space-between;\n    margin: 0px 12px;\n    width: 90%;\n}\n\n#slideshow-arrows img {\n    width: 24px;\n    height: 24px;\n    background-color: white;\n    padding: 10px;\n    transition: background-color 0.5s ease-in-out;\n}\n\n#slideshow-arrows img:hover {\n    background-color: red;\n}\n\n#dots {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n}\n\n#dots img {\n    width: 18px;\n    height: 18px;\n}\n\n#dots img.active {\n    filter: contrast(0.5);\n}"],sourceRoot:""}]);const s=a},426:(n,e,t)=>{t.d(e,{Z:()=>s});var i=t(537),o=t.n(i),r=t(645),a=t.n(r)()(o());a.push([n.id,"body {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: Georgia, 'Times New Roman', Times, serif;\n}\n\nnav {\n    display: flex; \n    justify-content: space-evenly;\n    height: 98px;\n    background-color:rgb(0, 0, 0);\n    color: white;\n}\n\n.parentItem {\n    display: inline-block;\n    transition: all 0.3s ease-in-out;\n}\n\n.parentItem.active {\n    color: rgb(228, 228, 228);\n    background-color: rgb(24, 23, 23);\n    cursor: pointer;\n}\n\n.logo {\n    width: 20%;\n    align-self: center;\n    font-size: x-large;\n}\n\n.nav-links {\n    display: flex;\n    justify-content: space-around; \n}\n\nnav ul\n {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\nnav a {\n    padding: 40px 20px;\n}\n\n.sub-menu {\n    display: block;\n    position: absolute;\n    opacity: 0;\n    visibility: hidden;\n    transition: all 0.3s ease-in-out 0.1s;\n}\n\n.sub-menu.visible {\n    opacity: 100;\n    visibility: visible;\n}\n\n.sub-menu li {\n    padding: 10px 20px;\n    min-width: 150px;\n    background-color: rgb(24, 23, 23);\n    color: rgb(228, 228, 228);\n    border-top: 0.5px solid rgba(70, 70, 70, 0.47);\n    transition: all 0.3s ease-in-out;\n}\n\n.sub-menu li:hover {\n    background-color: #cb1212;\n    color: gainsboro;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,qDAAqD;AACzD;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,YAAY;IACZ,6BAA6B;IAC7B,YAAY;AAChB;;AAEA;IACI,qBAAqB;IACrB,gCAAgC;AACpC;;AAEA;IACI,yBAAyB;IACzB,iCAAiC;IACjC,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,6BAA6B;AACjC;;AAEA;;IAEI,gBAAgB;IAChB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,UAAU;IACV,kBAAkB;IAClB,qCAAqC;AACzC;;AAEA;IACI,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,iCAAiC;IACjC,yBAAyB;IACzB,8CAA8C;IAC9C,gCAAgC;AACpC;;AAEA;IACI,yBAAyB;IACzB,gBAAgB;AACpB",sourcesContent:["body {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: Georgia, 'Times New Roman', Times, serif;\n}\n\nnav {\n    display: flex; \n    justify-content: space-evenly;\n    height: 98px;\n    background-color:rgb(0, 0, 0);\n    color: white;\n}\n\n.parentItem {\n    display: inline-block;\n    transition: all 0.3s ease-in-out;\n}\n\n.parentItem.active {\n    color: rgb(228, 228, 228);\n    background-color: rgb(24, 23, 23);\n    cursor: pointer;\n}\n\n.logo {\n    width: 20%;\n    align-self: center;\n    font-size: x-large;\n}\n\n.nav-links {\n    display: flex;\n    justify-content: space-around; \n}\n\nnav ul\n {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\nnav a {\n    padding: 40px 20px;\n}\n\n.sub-menu {\n    display: block;\n    position: absolute;\n    opacity: 0;\n    visibility: hidden;\n    transition: all 0.3s ease-in-out 0.1s;\n}\n\n.sub-menu.visible {\n    opacity: 100;\n    visibility: visible;\n}\n\n.sub-menu li {\n    padding: 10px 20px;\n    min-width: 150px;\n    background-color: rgb(24, 23, 23);\n    color: rgb(228, 228, 228);\n    border-top: 0.5px solid rgba(70, 70, 70, 0.47);\n    transition: all 0.3s ease-in-out;\n}\n\n.sub-menu li:hover {\n    background-color: #cb1212;\n    color: gainsboro;\n}"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);i&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},a=[],s=0;s<n.length;s++){var A=n[s],c=i.base?A[0]+i.base:A[0],l=r[c]||0,u="".concat(c," ").concat(l);r[c]=l+1;var d=t(u),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var g=o(p,i);i.byIndex=s,e.splice(s,0,{identifier:u,updater:g,references:1})}a.push(u)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=i(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var s=t(r[a]);e[s].references--}for(var A=i(n,o),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=A}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),o=t.n(i),r=t(569),a=t.n(r),s=t(565),A=t.n(s),c=t(216),l=t.n(c),u=t(589),d=t.n(u),p=t(426),g={};g.styleTagTransform=d(),g.setAttributes=A(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=l(),e()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;var m=t(283),C={};C.styleTagTransform=d(),C.setAttributes=A(),C.insert=a().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=l(),e()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var f=t(797),b={};b.styleTagTransform=d(),b.setAttributes=A(),b.insert=a().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=l(),e()(f.Z,b),f.Z&&f.Z.locals&&f.Z.locals;const I=t.p+"69841ca92d892d3be951.jpg",v=t.p+"9f899b739d98f69ecf5e.jpg",B=t.p+"7f1020f4c876741342e6.jpeg",h=t.p+"e101fce56ddc6a288007.jpeg",y=t.p+"2368b3042acb05421a3b.svg",x=t.p+"9e52f5242d36ff5d3859.svg",w=t.p+"a00341021d8df6e59bd3.svg";(function(){const n=[I,v,B,h],e=document.querySelector("#slideshow"),t=e.querySelector("#left-arrow");t.src=y;const i=e.querySelector("#right-arrow");function o(n){const e=document.querySelector("img.active");null===e||e.classList.remove("active"),n.classList.add("active")}function r(t){t<0||(t===n.length&&(t=0),e.setAttribute("data-picture",t),e.style.backgroundImage=`url(${n[t]})`,o(Array.from(document.querySelectorAll("#dots img"))[t]))}function a(){return Number(e.getAttribute("data-picture"))}i.src=x,function(){const e=document.createElement("div");e.setAttribute("id","dots");for(let t=0;t<n.length;t++){const n=document.createElement("img");n.src=w,n.setAttribute("data-picture",t),n.addEventListener("click",(function(){o(n),r(t)})),e.appendChild(n)}document.querySelector("body").appendChild(e)}(),r(0),t.addEventListener("click",(function(){r(a()-1)})),i.addEventListener("click",(function(){r(a()+1)}))})(),document.querySelectorAll(".menuItem").forEach((n=>{const e=n.querySelector(".parentItem"),t=n.querySelector(".sub-menu");e.addEventListener("mouseenter",(function(){t.classList.add("visible"),e.classList.add("active")})),e.addEventListener("mouseleave",(function(){t.classList.remove("visible"),e.classList.remove("active")})),t.addEventListener("mouseenter",(function(){t.classList.add("visible"),e.classList.add("active")})),t.addEventListener("mouseleave",(function(){t.classList.remove("visible"),e.classList.remove("active")}))})),function(){const n=document.querySelector("#burger-menu");n.addEventListener("click",(function(){document.querySelector(".nav-links").classList.toggle("visible"),n.classList.toggle("active")}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,